class Solution {
    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        
        if (pattern.length() != words.length) {
            return false;
        }

        Map<Character, String> map = new HashMap<>();
        Set<String> usedWords = new HashSet<>();

        for (int i = 0; i < pattern.length(); i++) {
            char currentChar = pattern.charAt(i);
            String currentWord = words[i];

            if (map.containsKey(currentChar)) {
                if (!map.get(currentChar).equals(currentWord)) {
                    return false;
                }
            } else {
                if (usedWords.contains(currentWord)) {
                    return false;
                }
                map.put(currentChar, currentWord);
                usedWords.add(currentWord);
            }
        }

        return true;
    }
}
